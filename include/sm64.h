#ifndef SM64_H
#define SM64_H

// Global header for Super Mario 64

#include "types.h"
#include "config.h"
#include "object_fields.h"
#include "object_constants.h"
#include "sounds.h"
#include "model_ids.h"
#include "mario_animation_ids.h"
#include "mario_geo_switch_case_ids.h"
#include "surface_terrains.h"
#include "macros.h"
#include "segments.h"

extern char *__n64Assert_Filename;
extern u32   __n64Assert_LineNum;
extern char *__n64Assert_Message;
extern void __n64Assert(char *fileName, u32 lineNum, char *message);

/**
 * Will always cause a crash with your message of choice
 */
#define ERROR(message) __n64Assert(__FILE__, __LINE__, (message))

/**
 * Will always cause a crash if cond is not true (handle with care)
 */
#define ASSERT(cond, message) do {  \
    if (!(cond)) {                  \
        ERROR(message);             \
    }                               \
} while (0);

/**
 * Will cause a crash if cond is not true, and ENABLE_DEBUG_ASSERTS is defined (allows for quick removal of littered asserts)
 */
#ifdef ENABLE_DEBUG_ASSERTS
    #define DEBUG_ASSERT(cond, message) ASSERT(cond, message)
#else
    #define DEBUG_ASSERT(cond, message)
#endif

// Pointer casting is technically UB, and avoiding it gets rid of endian issues as well as a nice side effect.
#define MASK_16_LOW  BITMASK(16)         // 0x0000FFFF
#define MASK_16_HIGH (MASK_16_LOW << 16) // 0xFFFF0000

#define GET_HIGH_U16_OF_32(var) ((u16)((var) >> 16))
#define GET_HIGH_S16_OF_32(var) ((s16)((var) >> 16))
#define GET_LOW_U16_OF_32(var)  ((u16)((var) & MASK_16_LOW))
#define GET_LOW_S16_OF_32(var)  ((s16)((var) & MASK_16_LOW))

#define SET_HIGH_U16_OF_32(var, x) ((var) = ((var) & MASK_16_LOW)  | ((x) << 16))
#define SET_HIGH_S16_OF_32(var, x) ((var) = ((var) & MASK_16_LOW)  | ((x) << 16))
#define SET_LOW_U16_OF_32(var, x)  ((var) = ((var) & MASK_16_HIGH) | ((u16)(x)))
#define SET_LOW_S16_OF_32(var, x)  ((var) = ((var) & MASK_16_HIGH) | ((s16)(x)))


// Render layer defines (see graph_node and rendering_graph_node).
enum RenderLayers {
    LAYER_FORCE,
    LAYER_OPAQUE,
    LAYER_OPAQUE_INTER,
    LAYER_OPAQUE_DECAL,
    LAYER_ALPHA,
    LAYER_ALPHA_DECAL,
#if SILHOUETTE
    LAYER_SILHOUETTE_OPAQUE,
    LAYER_SILHOUETTE_ALPHA,
    LAYER_OCCLUDE_SILHOUETTE_OPAQUE,
    LAYER_OCCLUDE_SILHOUETTE_ALPHA,
#endif
    LAYER_TRANSPARENT_DECAL,
    LAYER_TRANSPARENT,
    LAYER_TRANSPARENT_INTER,
    LAYER_COUNT
};

#define LAYER_FIRST                         LAYER_FORCE
#define LAYER_LAST                          (LAYER_COUNT - 1)

#define LAYER_ZB_FIRST                      LAYER_OPAQUE

#if SILHOUETTE
    #define LAYER_ZB_LAST                       LAYER_OCCLUDE_SILHOUETTE_ALPHA
    #define LAYER_SILHOUETTE_FIRST              LAYER_SILHOUETTE_OPAQUE
    #define LAYER_LAST_BEFORE_SILHOUETTE        (LAYER_SILHOUETTE_FIRST - 1) // LAYER_ALPHA_DECAL
    #define LAYER_SILHOUETTE_LAST               LAYER_SILHOUETTE_ALPHA
    #define LAYER_OCCLUDE_SILHOUETTE_FIRST      LAYER_OCCLUDE_SILHOUETTE_OPAQUE
    #define LAYER_OCCLUDE_SILHOUETTE_LAST       LAYER_OCCLUDE_SILHOUETTE_ALPHA
#else
    #define LAYER_ZB_LAST                       LAYER_ALPHA_DECAL
    #define LAYER_SILHOUETTE_OPAQUE             LAYER_OPAQUE // is zbuffered
    #define LAYER_SILHOUETTE_ALPHA              LAYER_ALPHA  // is zbuffered
    #define LAYER_OCCLUDE_SILHOUETTE_OPAQUE     LAYER_OPAQUE // is zbuffered
    #define LAYER_OCCLUDE_SILHOUETTE_ALPHA      LAYER_ALPHA  // is zbuffered
#endif

#define LAYER_NON_ZB_FIRST                  (LAYER_ZB_LAST + 1)
#define LAYER_NON_ZB_LAST                   LAYER_LAST


// MarioState.input

enum MarioInput {
    INPUT_NONE                   = 0x0,     // 0x0000
    INPUT_NONZERO_ANALOG         = BIT( 0), // 0x0001
    INPUT_A_PRESSED              = BIT( 1), // 0x0002
    INPUT_OFF_FLOOR              = BIT( 2), // 0x0004
    INPUT_ABOVE_SLIDE            = BIT( 3), // 0x0008
    INPUT_FIRST_PERSON           = BIT( 4), // 0x0010
    INPUT_IDLE                   = BIT( 5), // 0x0020
    INPUT_SQUISHED               = BIT( 6), // 0x0040
    INPUT_A_DOWN                 = BIT( 7), // 0x0080
    INPUT_IN_POISON_GAS          = BIT( 8), // 0x0100
    INPUT_IN_WATER               = BIT( 9), // 0x0200
    INPUT_STOMPED                = BIT(10), // 0x0400
    INPUT_INTERACT_OBJ_GRABBABLE = BIT(11), // 0x0800
    INPUT_B_DOWN                 = BIT(12), // 0x1000
    INPUT_B_PRESSED              = BIT(13), // 0x2000
    INPUT_Z_DOWN                 = BIT(14), // 0x4000
    INPUT_Z_PRESSED              = BIT(15), // 0x8000
};


// MarioState.particleFlags

enum MarioParticleFlags {
    PARTICLE_NONE                 = 0x0,     // 0x00000000
    PARTICLE_DUST                 = BIT( 0), // 0x00000001
    PARTICLE_VERTICAL_STAR        = BIT( 1), // 0x00000002
    PARTICLE_2                    = BIT( 2), // 0x00000004
    PARTICLE_SPARKLES             = BIT( 3), // 0x00000008
    PARTICLE_HORIZONTAL_STAR      = BIT( 4), // 0x00000010
    PARTICLE_BUBBLE               = BIT( 5), // 0x00000020
    PARTICLE_WATER_SPLASH         = BIT( 6), // 0x00000040
    PARTICLE_IDLE_WATER_WAVE      = BIT( 7), // 0x00000080
    PARTICLE_SHALLOW_WATER_WAVE   = BIT( 8), // 0x00000100
    PARTICLE_PLUNGE_BUBBLE        = BIT( 9), // 0x00000200
    PARTICLE_WAVE_TRAIL           = BIT(10), // 0x00000400
    PARTICLE_FIRE                 = BIT(11), // 0x00000800
    PARTICLE_SHALLOW_WATER_SPLASH = BIT(12), // 0x00001000
    PARTICLE_LEAF                 = BIT(13), // 0x00002000
    PARTICLE_SNOW                 = BIT(14), // 0x00004000
    PARTICLE_DIRT                 = BIT(15), // 0x00008000
    PARTICLE_MIST_CIRCLE          = BIT(16), // 0x00010000
    PARTICLE_BREATH               = BIT(17), // 0x00020000
    PARTICLE_TRIANGLE             = BIT(18), // 0x00040000
    PARTICLE_19                   = BIT(19), // 0x00080000
    PARTICLE_20                   = BIT(20), // 0x00100000
    PARTICLE_21                   = BIT(21), // 0x00200000
    PARTICLE_22                   = BIT(22), // 0x00400000
    PARTICLE_23                   = BIT(23), // 0x00800000
    PARTICLE_24                   = BIT(24), // 0x01000000
    PARTICLE_25                   = BIT(25), // 0x02000000
    PARTICLE_26                   = BIT(26), // 0x04000000
    PARTICLE_27                   = BIT(27), // 0x08000000
    PARTICLE_28                   = BIT(28), // 0x10000000
    PARTICLE_29                   = BIT(29), // 0x20000000
    PARTICLE_30                   = BIT(30), // 0x40000000
    PARTICLE_31                   = BIT(31), // 0x80000000
};


// MarioState.modelState

#define MARIO_STATE_ALPHA_SIZE 8

enum ModelStates {
    MODEL_STATE_NORMAL             = 0x0,    // 0x0000
    // bits 0 - 7 reserved for noise opacity/threshold.
    MODEL_STATE_ALPHA              = BIT(8), // 0x0100
    MODEL_STATE_METAL              = BIT(9), // 0x0200
    MODEL_STATE_NOISE_OPACITY_MASK = BITMASK(MARIO_STATE_ALPHA_SIZE), // bits 0 - 7
};


// MarioState.flags

enum MarioFlags {
    MARIO_NONE                = 0x0,     // 0x00000000
    MARIO_NORMAL_CAP          = BIT( 0), // 0x00000001
    MARIO_VANISH_CAP          = BIT( 1), // 0x00000002
    MARIO_METAL_CAP           = BIT( 2), // 0x00000004
    MARIO_WING_CAP            = BIT( 3), // 0x00000008
    MARIO_CAP_ON_HEAD         = BIT( 4), // 0x00000010
    MARIO_CAP_IN_HAND         = BIT( 5), // 0x00000020
    MARIO_METAL_SHOCK         = BIT( 6), // 0x00000040
    MARIO_TELEPORTING         = BIT( 7), // 0x00000080
    MARIO_JUMPING             = BIT( 8), // 0x00000100
    MARIO_UNUSED_9            = BIT( 9), // 0x00000200
    MARIO_UNUSED_10           = BIT(10), // 0x00000400
    MARIO_UNUSED_11           = BIT(11), // 0x00000800
    MARIO_UNUSED_12           = BIT(12), // 0x00001000
    MARIO_NO_PURPLE_SWITCH    = BIT(13), // 0x00002000
    MARIO_UNUSED_14           = BIT(14), // 0x00004000
    MARIO_UNUSED_15           = BIT(15), // 0x00008000
    MARIO_ACTION_SOUND_PLAYED = BIT(16), // 0x00010000
    MARIO_MARIO_SOUND_PLAYED  = BIT(17), // 0x00020000
    MARIO_FALL_SOUND_PLAYED   = BIT(18), // 0x00040000
    MARIO_UNUSED_19           = BIT(19), // 0x00080000
    MARIO_PUNCHING            = BIT(20), // 0x00100000
    MARIO_KICKING             = BIT(21), // 0x00200000
    MARIO_TRIPPING            = BIT(22), // 0x00400000
    MARIO_UNUSED_23           = BIT(23), // 0x00800000
    MARIO_UNUSED_24           = BIT(24), // 0x01000000
    MARIO_LEDGE_CLIMB_CAMERA  = BIT(25), // 0x02000000
    MARIO_UNUSED_26           = BIT(26), // 0x04000000
    MARIO_UNUSED_27           = BIT(27), // 0x08000000
    MARIO_UNUSED_28           = BIT(28), // 0x10000000
    MARIO_UNUSED_29           = BIT(29), // 0x20000000
    MARIO_AIR_HIT_WALL        = BIT(30), // 0x40000000
    MARIO_PUSHING             = BIT(31), // 0x80000000
    MARIO_SPECIAL_CAPS        = (MARIO_VANISH_CAP | MARIO_METAL_CAP | MARIO_WING_CAP),
    MARIO_CAPS                = (MARIO_NORMAL_CAP | MARIO_SPECIAL_CAPS),
};


// MarioState.action

#define ACT_ID_SIZE 9 // Number of bits reserved for the action id.
#define ACT_ID_MASK BITMASK(ACT_ID_SIZE) // bits 0 - 8 (0x1FF)

#define ACT_GROUP_SHIFT 6 // The rightmost bit used for checking the group id.
#define ACTS_PER_GROUP BIT(ACT_GROUP_SHIFT) // 64 actions per group.

#define ACT_GROUP_MASK (ACT_ID_MASK & ~BITMASK(ACT_GROUP_SHIFT)) // Only bits 6 - 8 (highest 3 bits of act id) are used to determine the action group.

enum MarioActionGroups {
    ACT_GROUP_STATIONARY = (0 * ACTS_PER_GROUP), // (0 << ACT_GROUP_SHIFT) // 0x00000000
    ACT_GROUP_MOVING     = (1 * ACTS_PER_GROUP), // (1 << ACT_GROUP_SHIFT) // 0x00000040
    ACT_GROUP_AIRBORNE   = (2 * ACTS_PER_GROUP), // (2 << ACT_GROUP_SHIFT) // 0x00000080
    ACT_GROUP_SUBMERGED  = (3 * ACTS_PER_GROUP), // (3 << ACT_GROUP_SHIFT) // 0x000000C0
    ACT_GROUP_CUTSCENE   = (4 * ACTS_PER_GROUP), // (4 << ACT_GROUP_SHIFT) // 0x00000100
    ACT_GROUP_AUTOMATIC  = (5 * ACTS_PER_GROUP), // (5 << ACT_GROUP_SHIFT) // 0x00000140
    ACT_GROUP_OBJECT     = (6 * ACTS_PER_GROUP), // (6 << ACT_GROUP_SHIFT) // 0x00000180
    ACT_GROUP_CUSTOM     = (7 * ACTS_PER_GROUP), // (7 << ACT_GROUP_SHIFT) // 0x000001C0
};

enum MarioActionFlags {
    ACT_FLAGS_NONE                      = 0x0,     // 0x00000000
    // bits 0 - 8 reserved for action id.
    ACT_FLAG_STATIONARY                 = BIT( 9), // 0x00000200
    ACT_FLAG_MOVING                     = BIT(10), // 0x00000400
    ACT_FLAG_AIR                        = BIT(11), // 0x00000800
    ACT_FLAG_INTANGIBLE                 = BIT(12), // 0x00001000
    ACT_FLAG_SWIMMING                   = BIT(13), // 0x00002000
    ACT_FLAG_METAL_WATER                = BIT(14), // 0x00004000
    ACT_FLAG_SHORT_HITBOX               = BIT(15), // 0x00008000
    ACT_FLAG_RIDING_SHELL               = BIT(16), // 0x00010000
    ACT_FLAG_INVULNERABLE               = BIT(17), // 0x00020000
    ACT_FLAG_BUTT_OR_STOMACH_SLIDE      = BIT(18), // 0x00040000
    ACT_FLAG_DIVING                     = BIT(19), // 0x00080000
    ACT_FLAG_ON_POLE                    = BIT(20), // 0x00100000
    ACT_FLAG_HANGING                    = BIT(21), // 0x00200000
    ACT_FLAG_IDLE                       = BIT(22), // 0x00400000
    ACT_FLAG_ATTACKING                  = BIT(23), // 0x00800000
    ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION = BIT(24), // 0x01000000
    ACT_FLAG_CONTROL_JUMP_HEIGHT        = BIT(25), // 0x02000000
    ACT_FLAG_ALLOW_FIRST_PERSON         = BIT(26), // 0x04000000
    ACT_FLAG_PAUSE_EXIT                 = BIT(27), // 0x08000000
    ACT_FLAG_SWIMMING_OR_FLYING         = BIT(28), // 0x10000000
    ACT_FLAG_WATER_OR_TEXT              = BIT(29), // 0x20000000
    ACT_FLAG_UNUSED                     = BIT(30), // 0x40000000
    ACT_FLAG_THROWING                   = BIT(31), // 0x80000000
};

#define ACT_UNINITIALIZED              (0x000)

// group 0x000: stationary actions
#define ACT_IDLE                       (0x001 | ACT_FLAG_STATIONARY | ACT_FLAG_IDLE | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_START_SLEEPING             (0x002 | ACT_FLAG_STATIONARY | ACT_FLAG_IDLE | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_SLEEPING                   (0x003 | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_WAKING_UP                  (0x004 | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_PANTING                    (0x005 | ACT_FLAG_STATIONARY | ACT_FLAG_IDLE | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_HOLD_PANTING_UNUSED        (0x006 | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_HOLD_IDLE                  (0x007 | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_HOLD_HEAVY_IDLE            (0x008 | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_STANDING_AGAINST_WALL      (0x009 | ACT_FLAG_STATIONARY | ACT_FLAG_IDLE | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_COUGHING                   (0x00A | ACT_FLAG_STATIONARY | ACT_FLAG_IDLE | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_SHIVERING                  (0x00B | ACT_FLAG_STATIONARY | ACT_FLAG_IDLE | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_UNUSED_00C                 (0x00C)
#define ACT_IN_QUICKSAND               (0x00D | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_NO_STANDING_DEATH          (0x00E | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_UNUSED_00F                 (0x00F)
#define ACT_UNUSED_010                 (0x010)

#define ACT_UNUSED_01F                 (0x01F)
#define ACT_CROUCHING                  (0x020 | ACT_FLAG_STATIONARY | ACT_FLAG_SHORT_HITBOX | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_START_CROUCHING            (0x021 | ACT_FLAG_STATIONARY | ACT_FLAG_SHORT_HITBOX | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_STOP_CROUCHING             (0x022 | ACT_FLAG_STATIONARY | ACT_FLAG_SHORT_HITBOX | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_START_CRAWLING             (0x023 | ACT_FLAG_STATIONARY | ACT_FLAG_SHORT_HITBOX | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_STOP_CRAWLING              (0x024 | ACT_FLAG_STATIONARY | ACT_FLAG_SHORT_HITBOX | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_SLIDE_KICK_SLIDE_STOP      (0x025 | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_SHOCKWAVE_BOUNCE           (0x026 | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_FIRST_PERSON               (0x027 | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_UNUSED_028                 (0x028)

#define ACT_UNUSED_02E                 (0x02E)
#define ACT_BACKFLIP_LAND_STOP         (0x02F | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_JUMP_LAND_STOP             (0x030 | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_DOUBLE_JUMP_LAND_STOP      (0x031 | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_FREEFALL_LAND_STOP         (0x032 | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_SIDE_FLIP_LAND_STOP        (0x033 | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_HOLD_JUMP_LAND_STOP        (0x034 | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_HOLD_FREEFALL_LAND_STOP    (0x035 | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_AIR_THROW_LAND             (0x036 | ACT_FLAG_STATIONARY | ACT_FLAG_AIR | ACT_FLAG_THROWING)
#define ACT_UNUSED_037                 (0x037)
#define ACT_TWIRL_LAND                 (0x038 | ACT_FLAG_STATIONARY | ACT_FLAG_ATTACKING | ACT_FLAG_PAUSE_EXIT | ACT_FLAG_SWIMMING_OR_FLYING)
#define ACT_LAVA_BOOST_LAND            (0x039 | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_TRIPLE_JUMP_LAND_STOP      (0x03A | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_LONG_JUMP_LAND_STOP        (0x03B | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_GROUND_POUND_LAND          (0x03C | ACT_FLAG_STATIONARY | ACT_FLAG_ATTACKING)
#define ACT_BRAKING_STOP               (0x03D | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_BUTT_SLIDE_STOP            (0x03E | ACT_FLAG_STATIONARY | ACT_FLAG_ALLOW_FIRST_PERSON | ACT_FLAG_PAUSE_EXIT)
#define ACT_HOLD_BUTT_SLIDE_STOP       (0x03F | ACT_FLAG_MOVING | ACT_FLAG_PAUSE_EXIT)

// group 0x040: moving (ground) actions
#define ACT_WALKING                    (0x040 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_UNUSED_041                 (0x041)
#define ACT_HOLD_WALKING               (0x042 | ACT_FLAG_MOVING)
#define ACT_TURNING_AROUND             (0x043 | ACT_FLAG_MOVING)
#define ACT_FINISH_TURNING_AROUND      (0x044 | ACT_FLAG_MOVING)
#define ACT_BRAKING                    (0x045 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_RIDING_SHELL_GROUND        (0x046 | ACT_FLAG_MOVING | ACT_FLAG_RIDING_SHELL | ACT_FLAG_ATTACKING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_HOLD_HEAVY_WALKING         (0x047 | ACT_FLAG_MOVING)
#define ACT_CRAWLING                   (0x048 | ACT_FLAG_MOVING | ACT_FLAG_SHORT_HITBOX | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_BURNING_GROUND             (0x049 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_DECELERATING               (0x04A | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_HOLD_DECELERATING          (0x04B | ACT_FLAG_MOVING)
#define ACT_UNUSED_04C                 (0x04C)
#define ACT_UNUSED_04D                 (0x04D)
#define ACT_UNUSED_04E                 (0x04E)
#define ACT_UNUSED_04F                 (0x04F)
#define ACT_BEGIN_SLIDING              (0x050)
#define ACT_HOLD_BEGIN_SLIDING         (0x051)
#define ACT_BUTT_SLIDE                 (0x052 | ACT_FLAG_MOVING | ACT_FLAG_BUTT_OR_STOMACH_SLIDE | ACT_FLAG_ATTACKING)
#define ACT_STOMACH_SLIDE              (0x053 | ACT_FLAG_MOVING | ACT_FLAG_BUTT_OR_STOMACH_SLIDE | ACT_FLAG_DIVING | ACT_FLAG_ATTACKING)
#define ACT_HOLD_BUTT_SLIDE            (0x054 | ACT_FLAG_MOVING | ACT_FLAG_BUTT_OR_STOMACH_SLIDE | ACT_FLAG_ATTACKING)
#define ACT_HOLD_STOMACH_SLIDE         (0x055 | ACT_FLAG_MOVING | ACT_FLAG_BUTT_OR_STOMACH_SLIDE | ACT_FLAG_DIVING | ACT_FLAG_ATTACKING)
#define ACT_DIVE_SLIDE                 (0x056 | ACT_FLAG_MOVING | ACT_FLAG_DIVING | ACT_FLAG_ATTACKING)
#define ACT_MOVE_PUNCHING              (0x057 | ACT_FLAG_MOVING | ACT_FLAG_ATTACKING)
#define ACT_UNUSED_058                 (0x058)
#define ACT_CROUCH_SLIDE               (0x059 | ACT_FLAG_MOVING | ACT_FLAG_SHORT_HITBOX | ACT_FLAG_ATTACKING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_SLIDE_KICK_SLIDE           (0x05A | ACT_FLAG_MOVING | ACT_FLAG_ATTACKING)
#define ACT_UNUSED_05B                 (0x05B)
#define ACT_UNUSED_05C                 (0x05C)
#define ACT_UNUSED_05D                 (0x05D)
#define ACT_UNUSED_05E                 (0x05E)
#define ACT_UNUSED_05F                 (0x05F)
#define ACT_HARD_BACKWARD_GROUND_KB    (0x060 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_HARD_FORWARD_GROUND_KB     (0x061 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_BACKWARD_GROUND_KB         (0x062 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_FORWARD_GROUND_KB          (0x063 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_SOFT_BACKWARD_GROUND_KB    (0x064 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_SOFT_FORWARD_GROUND_KB     (0x065 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_GROUND_BONK                (0x066 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_DEATH_EXIT_LAND            (0x067 | ACT_FLAG_MOVING | ACT_FLAG_INVULNERABLE)
#define ACT_UNUSED_068                 (0x068)
#define ACT_UNUSED_06C                 (0x06C)
#define ACT_UNUSED_06D                 (0x06D)
#define ACT_UNUSED_06E                 (0x06E)
#define ACT_UNUSED_06F                 (0x06F)
#define ACT_JUMP_LAND                  (0x070 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_FREEFALL_LAND              (0x071 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_DOUBLE_JUMP_LAND           (0x072 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_SIDE_FLIP_LAND             (0x073 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_HOLD_JUMP_LAND             (0x074 | ACT_FLAG_MOVING)
#define ACT_HOLD_FREEFALL_LAND         (0x075 | ACT_FLAG_MOVING)
#define ACT_QUICKSAND_JUMP_LAND        (0x076 | ACT_FLAG_MOVING)
#define ACT_HOLD_QUICKSAND_JUMP_LAND   (0x077 | ACT_FLAG_MOVING)
#define ACT_TRIPLE_JUMP_LAND           (0x078 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_LONG_JUMP_LAND             (0x079 | ACT_FLAG_MOVING)
#define ACT_BACKFLIP_LAND              (0x07A | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_UNUSED_07B                 (0x07B)
#define ACT_UNUSED_07C                 (0x07C)
#define ACT_UNUSED_07D                 (0x07D)
#define ACT_UNUSED_07E                 (0x07E)
#define ACT_UNUSED_07F                 (0x07F)

// group 0x080: airborne actions
#define ACT_JUMP                       (0x080 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_DOUBLE_JUMP                (0x081 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_TRIPLE_JUMP                (0x082 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_BACKFLIP                   (0x083 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_UNUSED_084                 (0x084)
#define ACT_STEEP_JUMP                 (0x085 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_WALL_KICK_AIR              (0x086 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_SIDE_FLIP                  (0x087 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_LONG_JUMP                  (0x088 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_WATER_JUMP                 (0x089 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_DIVE                       (0x08A | ACT_FLAG_AIR | ACT_FLAG_DIVING | ACT_FLAG_ATTACKING | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_FREEFALL                   (0x08C | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_TOP_OF_POLE_JUMP           (0x08D | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_BUTT_SLIDE_AIR             (0x08E | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_UNUSED_08F                 (0x08F)
#define ACT_UNUSED_090                 (0x090)
#define ACT_UNUSED_091                 (0x091)
#define ACT_UNUSED_092                 (0x092)
#define ACT_UNUSED_093                 (0x093)
#define ACT_FLYING_TRIPLE_JUMP         (0x094 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_UNUSED_095                 (0x095)
#define ACT_UNUSED_096                 (0x096)
#define ACT_UNUSED_097                 (0x097)
#define ACT_SHOT_FROM_CANNON           (0x098 | ACT_FLAG_AIR | ACT_FLAG_DIVING | ACT_FLAG_ATTACKING)
#define ACT_FLYING                     (0x099 | ACT_FLAG_AIR | ACT_FLAG_DIVING | ACT_FLAG_ATTACKING | ACT_FLAG_SWIMMING_OR_FLYING)
#define ACT_RIDING_SHELL_JUMP          (0x09A | ACT_FLAG_AIR | ACT_FLAG_RIDING_SHELL | ACT_FLAG_ATTACKING | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_RIDING_SHELL_FALL          (0x09B | ACT_FLAG_AIR | ACT_FLAG_RIDING_SHELL | ACT_FLAG_ATTACKING)
#define ACT_VERTICAL_WIND              (0x09C | ACT_FLAG_AIR | ACT_FLAG_DIVING | ACT_FLAG_SWIMMING_OR_FLYING)
#define ACT_UNUSED_09D                 (0x09D)
#define ACT_UNUSED_09E                 (0x09E)
#define ACT_UNUSED_09F                 (0x09F)
#define ACT_HOLD_JUMP                  (0x0A0 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_HOLD_FREEFALL              (0x0A1 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_HOLD_BUTT_SLIDE_AIR        (0x0A2 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_HOLD_WATER_JUMP            (0x0A3 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_TWIRLING                   (0x0A4 | ACT_FLAG_AIR | ACT_FLAG_ATTACKING | ACT_FLAG_SWIMMING_OR_FLYING)
#define ACT_FORWARD_ROLLOUT            (0x0A6 | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_UNUSED_0A5                 (0x0A5)
#define ACT_AIR_HIT_WALL               (0x0A7 | ACT_FLAG_AIR)
#define ACT_RIDING_HOOT                (0x0A8 | ACT_FLAG_MOVING)
#define ACT_GROUND_POUND               (0x0A9 | ACT_FLAG_AIR | ACT_FLAG_ATTACKING)
#define ACT_SLIDE_KICK                 (0x0AA | ACT_FLAG_AIR | ACT_FLAG_ATTACKING | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_AIR_THROW                  (0x0AB | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT | ACT_FLAG_THROWING)
#define ACT_JUMP_KICK                  (0x0AC | ACT_FLAG_AIR | ACT_FLAG_ATTACKING | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_BACKWARD_ROLLOUT           (0x0AD | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_CRAZY_BOX_BOUNCE           (0x0AE | ACT_FLAG_AIR)
#define ACT_SPECIAL_TRIPLE_JUMP        (0x0AF | ACT_FLAG_AIR | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION | ACT_FLAG_CONTROL_JUMP_HEIGHT)
#define ACT_BACKWARD_AIR_KB            (0x0B0 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_FORWARD_AIR_KB             (0x0B1 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_HARD_FORWARD_AIR_KB        (0x0B2 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_HARD_BACKWARD_AIR_KB       (0x0B3 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_BURNING_JUMP               (0x0B4 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_BURNING_FALL               (0x0B5 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_SOFT_BONK                  (0x0B6 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_LAVA_BOOST                 (0x0B7 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_GETTING_BLOWN              (0x0B8 | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_UNUSED_0B9                 (0x0B9)

#define ACT_UNUSED_0BC                 (0x0BC)
#define ACT_THROWN_FORWARD             (0x0BD | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_THROWN_BACKWARD            (0x0BE | ACT_FLAG_AIR | ACT_FLAG_INVULNERABLE | ACT_FLAG_ALLOW_VERTICAL_WIND_ACTION)
#define ACT_UNUSED_0BF                 (0x0BF)

// group 0x0C0: submerged actions
#define ACT_WATER_IDLE                 (0x0C0 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_PAUSE_EXIT | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_HOLD_WATER_IDLE            (0x0C1 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_PAUSE_EXIT | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_WATER_ACTION_END           (0x0C2 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_HOLD_WATER_ACTION_END      (0x0C3 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_DROWNING                   (0x0C4 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_BACKWARD_WATER_KB          (0x0C5 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_INVULNERABLE | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_FORWARD_WATER_KB           (0x0C6 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_INVULNERABLE | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_WATER_DEATH                (0x0C7 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_WATER_SHOCKED              (0x0C8 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_INVULNERABLE | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_UNUSED_0C9                 (0x0C9)
#define ACT_UNUSED_0CA                 (0x0CA)
#define ACT_UNUSED_0CB                 (0x0CB)
#define ACT_UNUSED_0CC                 (0x0CC)
#define ACT_UNUSED_0CD                 (0x0CD)
#define ACT_UNUSED_0CE                 (0x0CE)
#define ACT_UNUSED_0CF                 (0x0CF)
#define ACT_BREASTSTROKE               (0x0D0 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_SWIMMING_END               (0x0D1 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_FLUTTER_KICK               (0x0D2 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_HOLD_BREASTSTROKE          (0x0D3 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_HOLD_SWIMMING_END          (0x0D4 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_HOLD_FLUTTER_KICK          (0x0D5 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_WATER_SHELL_SWIMMING       (0x0D6 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_UNUSED_0D7                 (0x0D7)
#define ACT_UNUSED_0D8                 (0x0D8)
#define ACT_UNUSED_0D9                 (0x0D9)
#define ACT_UNUSED_0DA                 (0x0DA)
#define ACT_UNUSED_0DB                 (0x0DB)
#define ACT_UNUSED_0DC                 (0x0DC)
#define ACT_UNUSED_0DD                 (0x0DD)
#define ACT_UNUSED_0DE                 (0x0DE)
#define ACT_UNUSED_0DF                 (0x0DF)
#define ACT_WATER_THROW                (0x0E0 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_WATER_PUNCH                (0x0E1 | ACT_FLAG_MOVING | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_WATER_PLUNGE               (0x0E2 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_CAUGHT_IN_WHIRLPOOL        (0x0E3 | ACT_FLAG_STATIONARY | ACT_FLAG_SWIMMING | ACT_FLAG_INVULNERABLE | ACT_FLAG_SWIMMING_OR_FLYING | ACT_FLAG_WATER_OR_TEXT)
#define ACT_UNUSED_0E4                 (0x0E4)
#define ACT_UNUSED_0E5                 (0x0E5)
#define ACT_UNUSED_0E6                 (0x0E6)
#define ACT_UNUSED_0E7                 (0x0E7)
#define ACT_UNUSED_0E8                 (0x0E8)
#define ACT_UNUSED_0E9                 (0x0E9)
#define ACT_UNUSED_0EA                 (0x0EA)
#define ACT_UNUSED_0EB                 (0x0EB)
#define ACT_UNUSED_0EC                 (0x0EC)
#define ACT_UNUSED_0ED                 (0x0ED)
#define ACT_UNUSED_0EE                 (0x0EE)
#define ACT_UNUSED_0EF                 (0x0EF)
#define ACT_METAL_WATER_STANDING       (0x0F0 | ACT_FLAG_STATIONARY | ACT_FLAG_METAL_WATER | ACT_FLAG_PAUSE_EXIT)
#define ACT_HOLD_METAL_WATER_STANDING  (0x0F1 | ACT_FLAG_STATIONARY | ACT_FLAG_METAL_WATER | ACT_FLAG_PAUSE_EXIT)
#define ACT_METAL_WATER_WALKING        (0x0F2 | ACT_FLAG_MOVING | ACT_FLAG_METAL_WATER)
#define ACT_HOLD_METAL_WATER_WALKING   (0x0F3 | ACT_FLAG_MOVING | ACT_FLAG_METAL_WATER)
#define ACT_METAL_WATER_FALLING        (0x0F4 | ACT_FLAG_STATIONARY | ACT_FLAG_METAL_WATER)
#define ACT_HOLD_METAL_WATER_FALLING   (0x0F5 | ACT_FLAG_STATIONARY | ACT_FLAG_METAL_WATER)
#define ACT_METAL_WATER_FALL_LAND      (0x0F6 | ACT_FLAG_STATIONARY | ACT_FLAG_METAL_WATER)
#define ACT_HOLD_METAL_WATER_FALL_LAND (0x0F7 | ACT_FLAG_STATIONARY | ACT_FLAG_METAL_WATER)
#define ACT_METAL_WATER_JUMP           (0x0F8 | ACT_FLAG_MOVING | ACT_FLAG_METAL_WATER)
#define ACT_HOLD_METAL_WATER_JUMP      (0x0F9 | ACT_FLAG_MOVING | ACT_FLAG_METAL_WATER)
#define ACT_METAL_WATER_JUMP_LAND      (0x0FA | ACT_FLAG_MOVING | ACT_FLAG_METAL_WATER)
#define ACT_HOLD_METAL_WATER_JUMP_LAND (0x0FB | ACT_FLAG_MOVING | ACT_FLAG_METAL_WATER)
#define ACT_UNUSED_0FC                 (0x0FC)
#define ACT_UNUSED_0FD                 (0x0FD)
#define ACT_UNUSED_0FE                 (0x0FE)
#define ACT_UNUSED_0FF                 (0x0FF)

// group 0x100: cutscene actions
#define ACT_DISAPPEARED                (0x100 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_INTRO_CUTSCENE             (0x101 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_ALLOW_FIRST_PERSON)
#define ACT_STAR_DANCE_EXIT            (0x102 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_STAR_DANCE_WATER           (0x103 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_FALL_AFTER_STAR_GRAB       (0x104 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_READING_AUTOMATIC_DIALOG   (0x105 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_WATER_OR_TEXT)
#define ACT_READING_NPC_DIALOG         (0x106 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_WATER_OR_TEXT)
#define ACT_STAR_DANCE_NO_EXIT         (0x107 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_READING_SIGN               (0x108 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_JUMBO_STAR_CUTSCENE        (0x109 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_WAITING_FOR_DIALOG         (0x10A | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_UNUSED_10B                 (0x10B)
#define ACT_UNUSED_10C                 (0x10C)
#define ACT_UNUSED_10D                 (0x10D)
#define ACT_UNUSED_10E                 (0x10E)
#define ACT_DEBUG_FREE_MOVE            (0x10F | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_UNUSED_110                 (0x110)
#define ACT_STANDING_DEATH             (0x111 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_INVULNERABLE)
#define ACT_QUICKSAND_DEATH            (0x112 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_INVULNERABLE)
#define ACT_ELECTROCUTION              (0x113 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_INVULNERABLE)
#define ACT_SUFFOCATION                (0x114 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_INVULNERABLE)
#define ACT_DEATH_ON_STOMACH           (0x115 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_INVULNERABLE)
#define ACT_DEATH_ON_BACK              (0x116 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_INVULNERABLE)
#define ACT_EATEN_BY_BUBBA             (0x117 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE | ACT_FLAG_INVULNERABLE)
#define ACT_END_PEACH_CUTSCENE         (0x118 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_CREDITS_CUTSCENE           (0x119 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_END_WAVING_CUTSCENE        (0x11A | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_UNUSED_11B                 (0x11B)
#define ACT_UNUSED_11C                 (0x11C)
#define ACT_UNUSED_11D                 (0x11D)
#define ACT_UNUSED_11E                 (0x11E)
#define ACT_UNUSED_11F                 (0x11F)
#define ACT_PULLING_DOOR               (0x120 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_PUSHING_DOOR               (0x121 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_WARP_DOOR_SPAWN            (0x122 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_EMERGE_FROM_PIPE           (0x123 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_SPAWN_SPIN_AIRBORNE        (0x124 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_SPAWN_SPIN_LANDING         (0x125 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_EXIT_AIRBORNE              (0x126 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_EXIT_LAND_SAVE_DIALOG      (0x127 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_DEATH_EXIT                 (0x128 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_UNUSED_DEATH_EXIT          (0x129 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_FALLING_DEATH_EXIT         (0x12A | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_SPECIAL_EXIT_AIRBORNE      (0x12B | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_SPECIAL_DEATH_EXIT         (0x12C | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_FALLING_EXIT_AIRBORNE      (0x12D | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_UNLOCKING_KEY_DOOR         (0x12E | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_UNLOCKING_STAR_DOOR        (0x12F | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_UNUSED_130                 (0x130)
#define ACT_ENTERING_STAR_DOOR         (0x131 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_SPAWN_NO_SPIN_AIRBORNE     (0x132 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_SPAWN_NO_SPIN_LANDING      (0x133 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_BBH_ENTER_JUMP             (0x134 | ACT_FLAG_AIR | ACT_FLAG_INTANGIBLE)
#define ACT_BBH_ENTER_SPIN             (0x135 | ACT_FLAG_MOVING | ACT_FLAG_INTANGIBLE)
#define ACT_TELEPORT_FADE_OUT          (0x136 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_TELEPORT_FADE_IN           (0x137 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_SHOCKED                    (0x138 | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_SQUISHED                   (0x139 | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_HEAD_STUCK_IN_GROUND       (0x13A | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_BUTT_STUCK_IN_GROUND       (0x13B | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_FEET_STUCK_IN_GROUND       (0x13C | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_PUTTING_ON_CAP             (0x13D | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_UNUSED_13E                 (0x13E)
#define ACT_UNUSED_13F                 (0x13F)

// group 0x140: "automatic" actions
#define ACT_HOLDING_POLE               (0x140 | ACT_FLAG_STATIONARY | ACT_FLAG_ON_POLE | ACT_FLAG_PAUSE_EXIT)
#define ACT_GRAB_POLE_SLOW             (0x141 | ACT_FLAG_STATIONARY | ACT_FLAG_ON_POLE)
#define ACT_GRAB_POLE_FAST             (0x142 | ACT_FLAG_STATIONARY | ACT_FLAG_ON_POLE)
#define ACT_CLIMBING_POLE              (0x143 | ACT_FLAG_STATIONARY | ACT_FLAG_ON_POLE)
#define ACT_TOP_OF_POLE_TRANSITION     (0x144 | ACT_FLAG_STATIONARY | ACT_FLAG_ON_POLE)
#define ACT_TOP_OF_POLE                (0x145 | ACT_FLAG_STATIONARY | ACT_FLAG_ON_POLE)
#define ACT_UNUSED_146                 (0x146)
#define ACT_UNUSED_147                 (0x147)
#define ACT_START_HANGING              (0x148 | ACT_FLAG_STATIONARY | ACT_FLAG_HANGING | ACT_FLAG_PAUSE_EXIT)
#define ACT_HANGING                    (0x149 | ACT_FLAG_STATIONARY | ACT_FLAG_HANGING)
#define ACT_HANG_MOVING                (0x14A | ACT_FLAG_MOVING | ACT_FLAG_HANGING)
#define ACT_LEDGE_GRAB                 (0x14B | ACT_FLAG_STATIONARY | ACT_FLAG_PAUSE_EXIT)
#define ACT_UNUSED_14C                 (0x14C)
#define ACT_LEDGE_CLIMB_SLOW           (0x14D | ACT_FLAG_MOVING)
#define ACT_LEDGE_CLIMB_DOWN           (0x14E | ACT_FLAG_MOVING)
#define ACT_LEDGE_CLIMB_FAST           (0x14F | ACT_FLAG_MOVING)
#define ACT_UNUSED_150                 (0x150)
#define ACT_UNUSED_151                 (0x151)
#define ACT_UNUSED_152                 (0x152)
#define ACT_UNUSED_153                 (0x153)
#define ACT_UNUSED_154                 (0x154)
#define ACT_UNUSED_155                 (0x155)
#define ACT_UNUSED_156                 (0x156)
#define ACT_UNUSED_157                 (0x157)
#define ACT_UNUSED_158                 (0x158)
#define ACT_UNUSED_159                 (0x159)
#define ACT_UNUSED_15A                 (0x15A)
#define ACT_UNUSED_15B                 (0x15B)
#define ACT_UNUSED_15C                 (0x15C)
#define ACT_UNUSED_15D                 (0x15D)
#define ACT_UNUSED_15E                 (0x15E)
#define ACT_UNUSED_15F                 (0x15F)
#define ACT_UNUSED_160                 (0x160)
#define ACT_UNUSED_161                 (0x161)
#define ACT_UNUSED_162                 (0x162)
#define ACT_UNUSED_163                 (0x163)
#define ACT_UNUSED_164                 (0x164)
#define ACT_UNUSED_165                 (0x165)
#define ACT_UNUSED_166                 (0x166)
#define ACT_UNUSED_167                 (0x167)
#define ACT_UNUSED_168                 (0x168)
#define ACT_UNUSED_169                 (0x169)
#define ACT_UNUSED_16A                 (0x16A)
#define ACT_UNUSED_16B                 (0x16B)
#define ACT_UNUSED_16C                 (0x16C)
#define ACT_UNUSED_16D                 (0x16D)
#define ACT_UNUSED_16E                 (0x16E)
#define ACT_UNUSED_16F                 (0x16F)
#define ACT_GRABBED                    (0x170 | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE)
#define ACT_IN_CANNON                  (0x171 | ACT_FLAG_STATIONARY | ACT_FLAG_INTANGIBLE)
#define ACT_TORNADO_TWIRLING           (0x172 | ACT_FLAG_STATIONARY | ACT_FLAG_INVULNERABLE | ACT_FLAG_SWIMMING_OR_FLYING)
#define ACT_UNUSED_173                 (0x173)
#define ACT_UNUSED_174                 (0x174)
#define ACT_UNUSED_175                 (0x175)
#define ACT_UNUSED_176                 (0x176)
#define ACT_UNUSED_177                 (0x177)
#define ACT_UNUSED_178                 (0x178)
#define ACT_UNUSED_179                 (0x179)
#define ACT_UNUSED_17A                 (0x17A)
#define ACT_UNUSED_17B                 (0x17B)
#define ACT_UNUSED_17C                 (0x17C)
#define ACT_UNUSED_17D                 (0x17D)
#define ACT_UNUSED_17E                 (0x17E)
#define ACT_UNUSED_17F                 (0x17F)

// group 0x180: object actions
#define ACT_PUNCHING                   (0x180 | ACT_FLAG_STATIONARY | ACT_FLAG_ATTACKING)
#define ACT_UNUSED_181                 (0x181)
#define ACT_UNUSED_182                 (0x182)
#define ACT_PICKING_UP                 (0x183 | ACT_FLAG_STATIONARY)
#define ACT_UNUSED_184                 (0x184)
#define ACT_DIVE_PICKING_UP            (0x185 | ACT_FLAG_STATIONARY)
#define ACT_STOMACH_SLIDE_STOP         (0x186 | ACT_FLAG_STATIONARY)
#define ACT_PLACING_DOWN               (0x187 | ACT_FLAG_STATIONARY)
#define ACT_THROWING                   (0x188 | ACT_FLAG_MOVING | ACT_FLAG_THROWING)
#define ACT_HEAVY_THROW                (0x189 | ACT_FLAG_MOVING | ACT_FLAG_THROWING)
#define ACT_UNUSED_18A                 (0x18A)
#define ACT_UNUSED_18B                 (0x18B)
#define ACT_UNUSED_18C                 (0x18C)
#define ACT_UNUSED_18D                 (0x18D)
#define ACT_UNUSED_18E                 (0x18E)
#define ACT_UNUSED_18F                 (0x18F)
#define ACT_PICKING_UP_BOWSER          (0x190 | ACT_FLAG_STATIONARY)
#define ACT_HOLDING_BOWSER             (0x191 | ACT_FLAG_STATIONARY)
#define ACT_RELEASING_BOWSER           (0x192 | ACT_FLAG_STATIONARY)
#define ACT_UNUSED_193                 (0x193)
#define ACT_UNUSED_194                 (0x194)
#define ACT_UNUSED_195                 (0x195)
#define ACT_UNUSED_196                 (0x196)
#define ACT_UNUSED_197                 (0x197)
#define ACT_UNUSED_198                 (0x198)
#define ACT_UNUSED_199                 (0x199)
#define ACT_UNUSED_19A                 (0x19A)
#define ACT_UNUSED_19B                 (0x19B)
#define ACT_UNUSED_19C                 (0x19C)
#define ACT_UNUSED_19D                 (0x19D)
#define ACT_UNUSED_19E                 (0x19E)
#define ACT_UNUSED_19F                 (0x19F)
#define ACT_UNUSED_1A0                 (0x1A0)
#define ACT_UNUSED_1A1                 (0x1A1)
#define ACT_UNUSED_1A2                 (0x1A2)
#define ACT_UNUSED_1A3                 (0x1A3)
#define ACT_UNUSED_1A4                 (0x1A4)
#define ACT_UNUSED_1A5                 (0x1A5)
#define ACT_UNUSED_1A6                 (0x1A6)
#define ACT_UNUSED_1A7                 (0x1A7)
#define ACT_UNUSED_1A8                 (0x1A8)
#define ACT_UNUSED_1A9                 (0x1A9)
#define ACT_UNUSED_1AA                 (0x1AA)
#define ACT_UNUSED_1AB                 (0x1AB)
#define ACT_UNUSED_1AC                 (0x1AC)
#define ACT_UNUSED_1AD                 (0x1AD)
#define ACT_UNUSED_1AE                 (0x1AE)
#define ACT_UNUSED_1AF                 (0x1AF)
#define ACT_UNUSED_1B0                 (0x1B0)
#define ACT_UNUSED_1B1                 (0x1B1)
#define ACT_UNUSED_1B2                 (0x1B2)
#define ACT_UNUSED_1B3                 (0x1B3)
#define ACT_UNUSED_1B4                 (0x1B4)
#define ACT_UNUSED_1B5                 (0x1B5)
#define ACT_UNUSED_1B6                 (0x1B6)
#define ACT_UNUSED_1B7                 (0x1B7)
#define ACT_UNUSED_1B8                 (0x1B8)
#define ACT_UNUSED_1B9                 (0x1B9)
#define ACT_UNUSED_1BA                 (0x1BA)
#define ACT_UNUSED_1BB                 (0x1BB)
#define ACT_UNUSED_1BC                 (0x1BC)
#define ACT_UNUSED_1BD                 (0x1BD)
#define ACT_UNUSED_1BE                 (0x1BE)
#define ACT_UNUSED_1BF                 (0x1BF)

// group 0x1C0: custom actions
// 0x1C0 - 0x1FF


/**
 * This input mask is unused by the controller,
 * but END_DEMO is used internally to signal
 * the demo to end. This button cannot
 * be pressed normally by a controller.
 */
#define INPUT_END_DEMO  CONT_RESET

#define VALID_BUTTONS (A_BUTTON   | B_BUTTON   | Z_TRIG     | START_BUTTON | \
                       U_JPAD     | D_JPAD     | L_JPAD     | R_JPAD       | \
                       L_TRIG     | R_TRIG     |                             \
                       U_CBUTTONS | D_CBUTTONS | L_CBUTTONS | R_CBUTTONS   | \
                       X_BUTTON   | Y_BUTTON)

#define C_BUTTONS     (U_CBUTTONS | D_CBUTTONS | L_CBUTTONS | R_CBUTTONS   )

#define JPAD_BUTTONS  (U_JPAD     | D_JPAD     | L_JPAD     | R_JPAD       )

#endif // SM64_H
